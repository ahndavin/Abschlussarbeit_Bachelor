{\rtf1\ansi\ansicpg949\cocoartf2706
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset129 AppleSDGothicNeo-Regular;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Monaco;
\f3\fnil\fcharset0 HelveticaNeue;\f4\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red52\green52\blue52;\red240\green240\blue240;\red85\green138\blue67;
\red45\green98\blue1;\red115\green0\blue2;\red234\green255\blue255;\red2\green28\blue40;\red121\green213\blue255;
\red26\green28\blue31;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c26667\c26667\c26667;\cssrgb\c95294\c95294\c95294;\cssrgb\c40000\c60000\c33333;
\cssrgb\c22353\c45098\c0;\cssrgb\c53333\c0\c0;\cssrgb\c93333\c100000\c100000;\cssrgb\c0\c14902\c20784;\cssrgb\c53725\c86667\c100000;
\cssrgb\c13725\c14902\c16078;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \'c0\'af\'b4\'cf\'c5\'a9\'c7\'d1 \'b0\'aa \'b0\'e8\'bb\'ea\
\
\pard\pardeftab720\partightenfactor0

\f1\fs25\fsmilli12750 \AppleTypeServices\AppleTypeServicesF65538 \cf2 \cb3 \expnd0\expndtw0\kerning0
unique_elements, counts_elements = np.unique(y_train, return_counts=\cf4 \cb1 True\cf2 \cb3 )\
\pard\pardeftab720\partightenfactor0
\cf5 \cb1 print\cf2 \cb3 (\cf6 \cb1 "
\f0 \AppleTypeServices \'b0\'a2
\f1 \AppleTypeServices\AppleTypeServicesF65538  
\f0 \AppleTypeServices \'b7\'b9\'c0\'cc\'ba\'ed\'bf\'a1
\f1 \AppleTypeServices\AppleTypeServicesF65538  
\f0 \AppleTypeServices \'b4\'eb\'c7\'d1
\f1 \AppleTypeServices\AppleTypeServicesF65538  
\f0 \AppleTypeServices \'ba\'f3\'b5\'b5\'bc\'f6
\f1 \AppleTypeServices\AppleTypeServicesF65538 :"\cf2 \cb3 )\
\cf5 \cb1 print\cf2 \cb3 (np.asarray((unique_elements, counts_elements)))
\f0\fs24 \AppleTypeServices \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\partightenfactor0

\f2\fs26\fsmilli13200 \cf7 \cb8 \expnd0\expndtw0\kerning0
\
\

\f0 \'c0\'ce\'b5\'a6\'bd\'ba
\f2  
\f0 \'c0\'e7\'b9\'e8\'bf\'ad\'c7\'d2\'b6\'a7
\f2  column
\f0 \'bf\'a1
\f2  
\f0 \'c0\'cc\'c0\'fc
\f2  
\f0 \'c0\'ce\'b5\'a6\'bd\'ba\'b0\'aa\'c0\'cc
\f2  
\f0 \'b5\'e9\'be\'ee\'b0\'a1\'c1\'f6
\f2  
\f0 \'be\'ca\'b0\'d4
\f2  
\f0 \'c7\'cf\'b1\'e2
\f2  
\f0 \'c0\'a7\'c7\'d4\'b0\'fa
\f2  
\f0 \'b9\'d9\'b7\'ce
\f2  
\f0 \'c0\'fa\'c0\'e5\'c7\'cf\'b1\'e2
\f2  
\f0 \'c0\'a7\'c7\'d4
\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\partightenfactor0

\f2\fs29 \cf7 \cb8 \expnd0\expndtw0\kerning0
df.reset_index(drop\cf9 =\cf7 True, inplace\cf9 =\cf7 True)
\fs26\fsmilli13200 \
\
\
\
\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://stackoverflow.com/questions/47657651/boxplot-from-dictionary-with-different-length"}}{\fldrslt 
\f3\fs24 \cf10 \cb11 \outl0\strokewidth0 \strokec10 Boxplot from dictionary with different length}}\
\pard\pardeftab720\partightenfactor0

\f4\fs26 \cf0 \cb1 \outl0\strokewidth0 \strokec12 # Python 3.5+
\fs24 \
labels, data = [*
\fs26 zip
\fs24 (*dict1.items())]  
\fs26 # 'transpose' items to parallel key, value lists
\fs24 \
\

\fs26 # or backwards compatable    
\fs24 \
labels, data = dict1.keys(), dict1.values()\
\
plt.boxplot(data)\
plt.xticks(
\fs26 range
\fs24 (
\fs26 1
\fs24 , 
\fs26 len
\fs24 (labels) + 
\fs26 1
\fs24 ), labels)\
plt.show()\
}